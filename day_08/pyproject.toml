[tool.poetry]
name = "day-08-token-analysis"
version = "0.1.0"
description = "Enhanced token analysis system with accurate counting and advanced compression"
authors = ["AI Challenge <ai-challenge@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
httpx = "^0.25.2"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
pyyaml = "^6.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.9.1"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.6.1"
pylint = "^3.0.0"
ruff = "^0.1.0"
bandit = "^1.7.5"
pre-commit = "^3.5.0"

[tool.poetry.group.ml.dependencies]
transformers = "^4.36.0"
torch = "^2.1.0"
scikit-learn = "^1.3.0"
numpy = "^1.24.0"
docker = "^7.0.0"
fastapi = "^0.104.1"
uvicorn = "^0.24.0"
pydantic = "^2.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "regression: marks tests as regression tests",
    "slow: marks tests as slow",
    "benchmark: marks tests as benchmark tests",
    "ml: marks tests as ML-specific tests",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
strict = true
show_error_codes = true
show_column_numbers = true
show_error_context = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "torch.*",
    "sklearn.*",
    "numpy.*",
    "docker.*",
    "fastapi.*",
    "uvicorn.*"
]
ignore_missing_imports = true

[tool.pylint]
max-line-length = 88
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0613",  # unused-argument
]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B006",  # do not use mutable data structures for argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["ARG", "S101"]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]
