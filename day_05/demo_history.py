#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–∞–±–æ—Ç—ã —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª—è—Ö.
"""
import asyncio
import httpx
import time


async def demo_conversation_history():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π."""
    print("üí¨ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å Qwen –º–æ–¥–µ–ª—å—é
    url = "http://localhost:8000"
    
    print("üîç –¢–µ—Å—Ç–∏—Ä—É—é –º–æ–¥–µ–ª—å: qwen —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π")
    print()
    
    # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    print("1Ô∏è‚É£ –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
    messages1 = [
        {"role": "system", "content": "–¢—ã –ø–æ–∂–∏–ª–æ–π —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –µ—Ö–∏–¥–Ω–æ –ø–æ–¥—à—É—á–∏–≤–∞–µ—Ç. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –ª–∞–∫–æ–Ω–∏—á–Ω–æ."},
        {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?"}
    ]
    
    try:
        start_time = time.time()
        async with httpx.AsyncClient(timeout=None) as client:
            response1 = await client.post(
                f"{url}/chat",
                json={
                    "messages": messages1,
                    "max_tokens": 100,
                    "temperature": 0.7
                }
            )
            duration1 = int((time.time() - start_time) * 1000)
            
            if response1.status_code == 200:
                data1 = response1.json()
                print(f"üë¥ –î–µ–¥—É—à–∫–∞: {data1['response']}")
                print(f"üìä –¢–æ–∫–µ–Ω—ã: input={data1.get('input_tokens', 0)}, response={data1.get('response_tokens', 0)}, total={data1.get('total_tokens', 0)}")
                print(f"‚è±Ô∏è  –í—Ä–µ–º—è: {duration1}ms")
                print()
                
                # –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å—Ç–æ—Ä–∏–µ–π
                print("2Ô∏è‚É£ –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Å –∏—Å—Ç–æ—Ä–∏–µ–π):")
                messages2 = messages1 + [
                    {"role": "assistant", "content": data1['response']},
                    {"role": "user", "content": "–ê —á—Ç–æ —Ç—ã –¥—É–º–∞–µ—à—å –æ –ø–æ–≥–æ–¥–µ?"}
                ]
                
                start_time = time.time()
                response2 = await client.post(
                    f"{url}/chat",
                    json={
                        "messages": messages2,
                        "max_tokens": 100,
                        "temperature": 0.7
                    }
                )
                duration2 = int((time.time() - start_time) * 1000)
                
                if response2.status_code == 200:
                    data2 = response2.json()
                    print(f"üë¥ –î–µ–¥—É—à–∫–∞: {data2['response']}")
                    print(f"üìä –¢–æ–∫–µ–Ω—ã: input={data2.get('input_tokens', 0)}, response={data2.get('response_tokens', 0)}, total={data2.get('total_tokens', 0)}")
                    print(f"‚è±Ô∏è  –í—Ä–µ–º—è: {duration2}ms")
                    print()
                    
                    # –¢—Ä–µ—Ç—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–ª–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π
                    print("3Ô∏è‚É£ –¢—Ä–µ—Ç—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Å –ø–æ–ª–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π):")
                    messages3 = messages2 + [
                        {"role": "assistant", "content": data2['response']},
                        {"role": "user", "content": "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç!"}
                    ]
                    
                    start_time = time.time()
                    response3 = await client.post(
                        f"{url}/chat",
                        json={
                            "messages": messages3,
                            "max_tokens": 100,
                            "temperature": 0.7
                        }
                    )
                    duration3 = int((time.time() - start_time) * 1000)
                    
                    if response3.status_code == 200:
                        data3 = response3.json()
                        print(f"üë¥ –î–µ–¥—É—à–∫–∞: {data3['response']}")
                        print(f"üìä –¢–æ–∫–µ–Ω—ã: input={data3.get('input_tokens', 0)}, response={data3.get('response_tokens', 0)}, total={data3.get('total_tokens', 0)}")
                        print(f"‚è±Ô∏è  –í—Ä–µ–º—è: {duration3}ms")
                        print()
                        
                        print("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                        print("üìà –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:")
                        print(f"   ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–µ 1: {len(messages1)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                        print(f"   ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–µ 2: {len(messages2)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                        print(f"   ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–µ 3: {len(messages3)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                        print()
                        print("üéØ –õ–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏ —Ç–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç:")
                        print("   ‚Ä¢ –ü–æ–ª–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞")
                        print("   ‚Ä¢ –†–æ–ª–∏: system, user, assistant")
                        print("   ‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤")
                        print("   ‚Ä¢ –ö–æ–º–∞–Ω–¥—É '–æ—á–∏—Å—Ç–∏ –∏—Å—Ç–æ—Ä–∏—é' –¥–ª—è —Å–±—Ä–æ—Å–∞")
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç—Ä–µ—Ç—å–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏: {response3.status_code}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ç–æ—Ä–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏: {response2.status_code}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏: {response1.status_code}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    print("\n" + "=" * 60)
    print("üéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python terminal_chat_v5.py")


if __name__ == "__main__":
    asyncio.run(demo_conversation_history())
