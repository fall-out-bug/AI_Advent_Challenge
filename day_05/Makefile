# Day 05 - Terminal Chat with Local Models
# Based on universal Makefile template

.PHONY: help install test run-models stop-models clean run run-zen check-models logs demo-tokens demo-api demo-history

# Project-specific variables
PROJECT_NAME := day-05-terminal-chat
MAIN_SCRIPT := terminal_chat_v5.py
ZEN_SCRIPT := terminal_chat_v5_zen.py
TEST_DIR := tests
REQUIREMENTS_FILE := requirements.txt

# Detect Python executable
PYTHON := $(shell which python3 || which python)
PIP := $(shell which pip3 || which pip)

# Colors for output
GREEN := \033[32m
YELLOW := \033[33m
RED := \033[31m
RESET := \033[0m

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(GREEN)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è $(PROJECT_NAME):$(RESET)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(YELLOW)%-15s$(RESET) %s\n", $$1, $$2}'

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(GREEN)Installing dependencies...$(RESET)"
	$(PIP) install -r $(REQUIREMENTS_FILE)

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "$(GREEN)Running tests...$(RESET)"
	$(PYTHON) -m pytest tests/ -v

test-zen: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è Zen-–≤–µ—Ä—Å–∏–∏
	@echo "$(GREEN)Running Zen tests...$(RESET)"
	$(PYTHON) -m pytest tests/test_terminal_chat_v5_zen.py tests/test_chat_logic.py tests/test_terminal_ui.py tests/test_chat_state.py tests/test_text_utils.py -v

test-coverage: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
	@echo "$(GREEN)Running tests with coverage...$(RESET)"
	$(PYTHON) -m pytest tests/ --cov=. --cov-report=html --cov-report=term

docs: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
	@echo "$(GREEN)Generating documentation...$(RESET)"
	@echo "üìö Available documentation:"
	@echo "  ‚Ä¢ API_DOCUMENTATION.md - Complete API reference"
	@echo "  ‚Ä¢ DEVELOPER_GUIDE.md - Development guidelines"
	@echo "  ‚Ä¢ CHANGELOG.md - Version history"
	@echo "  ‚Ä¢ README.md - User guide"

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º
	@echo "$(GREEN)Running linter...$(RESET)"
	$(PYTHON) -m flake8 business/ ui/ state/ utils/ --max-line-length=100

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "$(GREEN)Formatting code...$(RESET)"
	$(PYTHON) -m black business/ ui/ state/ utils/ tests/

type-check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∏–ø—ã
	@echo "$(GREEN)Running type checker...$(RESET)"
	$(PYTHON) -m mypy business/ ui/ state/ utils/ --ignore-missing-imports

run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —á–∞—Ç (–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)
	@echo "$(GREEN)Running $(PROJECT_NAME)...$(RESET)"
	$(PYTHON) $(MAIN_SCRIPT)

run-models: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏
	@echo "$(GREEN)Starting local models...$(RESET)"
	cd ../local_models && docker-compose up -d

stop-models: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏
	@echo "$(GREEN)Stopping local models...$(RESET)"
	cd ../local_models && docker-compose down

check-models: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ª–æ–∫–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
	@echo "$(GREEN)Checking model availability...$(RESET)"
	@curl -s http://localhost:8000/chat > /dev/null && echo "‚úÖ Qwen (8000) - –¥–æ—Å—Ç—É–ø–Ω–∞" || echo "‚ùå Qwen (8000) - –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
	@curl -s http://localhost:8001/chat > /dev/null && echo "‚úÖ Mistral (8001) - –¥–æ—Å—Ç—É–ø–Ω–∞" || echo "‚ùå Mistral (8001) - –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
	@curl -s http://localhost:8002/chat > /dev/null && echo "‚úÖ TinyLlama (8002) - –¥–æ—Å—Ç—É–ø–Ω–∞" || echo "‚ùå TinyLlama (8002) - –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
	@echo "$(GREEN)Showing model logs...$(RESET)"
	cd ../local_models && docker-compose logs -f

demo-tokens: ## –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–∫–µ–Ω–∞–º–∏
	@echo "$(GREEN)Running token demo...$(RESET)"
	$(PYTHON) demo_tokens.py

demo-api: ## –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è API
	@echo "$(GREEN)Running API switching demo...$(RESET)"
	$(PYTHON) demo_api_switching.py

demo-history: ## –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —Ä–∞–±–æ—Ç—ã —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π
	@echo "$(GREEN)Running history demo...$(RESET)"
	$(PYTHON) demo_history.py

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	@echo "$(GREEN)Cleaning up...$(RESET)"
	@find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
	@find . -type f -name "*.pyc" -delete 2>/dev/null || true
	@find . -type f -name "*.pyo" -delete 2>/dev/null || true
	@find . -type d -name ".pytest_cache" -exec rm -rf {} + 2>/dev/null || true

setup: install ## Setup project (install dependencies)
	@echo "$(GREEN)Project setup complete!$(RESET)"

run-zen: ## Run Zen version of terminal chat (Python Zen compliant)
	@echo "$(GREEN)üêç Starting Zen version of terminal chat...$(RESET)"
	@echo "$(YELLOW)Following Python Zen: Simple, Explicit, Beautiful$(RESET)"
	@$(PYTHON) $(ZEN_SCRIPT)

run: ## Run terminal chat (original version)
	@echo "$(GREEN)Starting terminal chat...$(RESET)"
	@$(PYTHON) $(MAIN_SCRIPT)

check-python: ## Check Python version
	@echo "$(GREEN)Python version:$(RESET)"
	@$(PYTHON) --version
